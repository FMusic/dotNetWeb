//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Klass
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PraRwaProjektEntities : DbContext
    {
        public PraRwaProjektEntities()
            : base("name=PraRwaProjektEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int GetGroceries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetGroceries");
        }
    
        public virtual ObjectResult<GetMeals_Result> GetMeals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMeals_Result>("GetMeals");
        }
    
        public virtual ObjectResult<string> GetMeasuringUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMeasuringUnits");
        }
    
        public virtual ObjectResult<GetUserMealsForADay_Result> GetUserMealsForADay(string username, Nullable<System.DateTime> date)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserMealsForADay_Result>("GetUserMealsForADay", usernameParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers");
        }
    
        public virtual ObjectResult<string> LoginUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoginUser", usernameParameter);
        }
    
        public virtual int NewCombination(Nullable<System.DateTime> datef, Nullable<System.DateTime> datet, Nullable<int> numOfMeals, ObjectParameter combinationID)
        {
            var datefParameter = datef.HasValue ?
                new ObjectParameter("datef", datef) :
                new ObjectParameter("datef", typeof(System.DateTime));
    
            var datetParameter = datet.HasValue ?
                new ObjectParameter("datet", datet) :
                new ObjectParameter("datet", typeof(System.DateTime));
    
            var numOfMealsParameter = numOfMeals.HasValue ?
                new ObjectParameter("numOfMeals", numOfMeals) :
                new ObjectParameter("numOfMeals", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewCombination", datefParameter, datetParameter, numOfMealsParameter, combinationID);
        }
    
        public virtual int NewGrocerie(string name, string groctype)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var groctypeParameter = groctype != null ?
                new ObjectParameter("groctype", groctype) :
                new ObjectParameter("groctype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewGrocerie", nameParameter, groctypeParameter);
        }
    
        public virtual int NewMeal(string name, string grocFat, string grocProtein, string grocCarbs)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var grocFatParameter = grocFat != null ?
                new ObjectParameter("grocFat", grocFat) :
                new ObjectParameter("grocFat", typeof(string));
    
            var grocProteinParameter = grocProtein != null ?
                new ObjectParameter("grocProtein", grocProtein) :
                new ObjectParameter("grocProtein", typeof(string));
    
            var grocCarbsParameter = grocCarbs != null ?
                new ObjectParameter("grocCarbs", grocCarbs) :
                new ObjectParameter("grocCarbs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewMeal", nameParameter, grocFatParameter, grocProteinParameter, grocCarbsParameter);
        }
    
        public virtual int NewMeasuringUnit(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewMeasuringUnit", nameParameter);
        }
    
        public virtual int NewNutritionsForCombination(Nullable<int> combinationID, Nullable<int> fatPercentage, Nullable<int> proteinPercentage, Nullable<int> carboPercentage, Nullable<int> combinationPercentage, Nullable<int> orderNumber, string name)
        {
            var combinationIDParameter = combinationID.HasValue ?
                new ObjectParameter("combinationID", combinationID) :
                new ObjectParameter("combinationID", typeof(int));
    
            var fatPercentageParameter = fatPercentage.HasValue ?
                new ObjectParameter("fatPercentage", fatPercentage) :
                new ObjectParameter("fatPercentage", typeof(int));
    
            var proteinPercentageParameter = proteinPercentage.HasValue ?
                new ObjectParameter("proteinPercentage", proteinPercentage) :
                new ObjectParameter("proteinPercentage", typeof(int));
    
            var carboPercentageParameter = carboPercentage.HasValue ?
                new ObjectParameter("carboPercentage", carboPercentage) :
                new ObjectParameter("carboPercentage", typeof(int));
    
            var combinationPercentageParameter = combinationPercentage.HasValue ?
                new ObjectParameter("combinationPercentage", combinationPercentage) :
                new ObjectParameter("combinationPercentage", typeof(int));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewNutritionsForCombination", combinationIDParameter, fatPercentageParameter, proteinPercentageParameter, carboPercentageParameter, combinationPercentageParameter, orderNumberParameter, nameParameter);
        }
    
        public virtual int RegisterNewUser(string name, string surname, Nullable<System.DateTime> dob, string email, string username, string pass, Nullable<int> weight, Nullable<int> height, Nullable<int> phyAct, Nullable<int> dType, string sex)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(int));
    
            var phyActParameter = phyAct.HasValue ?
                new ObjectParameter("PhyAct", phyAct) :
                new ObjectParameter("PhyAct", typeof(int));
    
            var dTypeParameter = dType.HasValue ?
                new ObjectParameter("DType", dType) :
                new ObjectParameter("DType", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterNewUser", nameParameter, surnameParameter, dobParameter, emailParameter, usernameParameter, passParameter, weightParameter, heightParameter, phyActParameter, dTypeParameter, sexParameter);
        }
    
        public virtual int SaveUserMealsForADay(string username, Nullable<System.DateTime> date, string meal, Nullable<int> orderNumber, Nullable<bool> grocPbool, string grocPMeasureUnit, Nullable<int> grocPQuantity, Nullable<bool> grocFbool, string grocFMeasureUnit, Nullable<int> grocFQuantity, Nullable<bool> grocCbool, string grocCMeasureUnit, Nullable<int> grocCQuantity)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var mealParameter = meal != null ?
                new ObjectParameter("meal", meal) :
                new ObjectParameter("meal", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(int));
    
            var grocPboolParameter = grocPbool.HasValue ?
                new ObjectParameter("grocPbool", grocPbool) :
                new ObjectParameter("grocPbool", typeof(bool));
    
            var grocPMeasureUnitParameter = grocPMeasureUnit != null ?
                new ObjectParameter("grocPMeasureUnit", grocPMeasureUnit) :
                new ObjectParameter("grocPMeasureUnit", typeof(string));
    
            var grocPQuantityParameter = grocPQuantity.HasValue ?
                new ObjectParameter("grocPQuantity", grocPQuantity) :
                new ObjectParameter("grocPQuantity", typeof(int));
    
            var grocFboolParameter = grocFbool.HasValue ?
                new ObjectParameter("grocFbool", grocFbool) :
                new ObjectParameter("grocFbool", typeof(bool));
    
            var grocFMeasureUnitParameter = grocFMeasureUnit != null ?
                new ObjectParameter("grocFMeasureUnit", grocFMeasureUnit) :
                new ObjectParameter("grocFMeasureUnit", typeof(string));
    
            var grocFQuantityParameter = grocFQuantity.HasValue ?
                new ObjectParameter("grocFQuantity", grocFQuantity) :
                new ObjectParameter("grocFQuantity", typeof(int));
    
            var grocCboolParameter = grocCbool.HasValue ?
                new ObjectParameter("grocCbool", grocCbool) :
                new ObjectParameter("grocCbool", typeof(bool));
    
            var grocCMeasureUnitParameter = grocCMeasureUnit != null ?
                new ObjectParameter("grocCMeasureUnit", grocCMeasureUnit) :
                new ObjectParameter("grocCMeasureUnit", typeof(string));
    
            var grocCQuantityParameter = grocCQuantity.HasValue ?
                new ObjectParameter("grocCQuantity", grocCQuantity) :
                new ObjectParameter("grocCQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveUserMealsForADay", usernameParameter, dateParameter, mealParameter, orderNumberParameter, grocPboolParameter, grocPMeasureUnitParameter, grocPQuantityParameter, grocFboolParameter, grocFMeasureUnitParameter, grocFQuantityParameter, grocCboolParameter, grocCMeasureUnitParameter, grocCQuantityParameter);
        }
    
        public virtual ObjectResult<GetGroceries2_Result> GetGroceries2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGroceries2_Result>("GetGroceries2");
        }
    
        public virtual int NewCombination2(Nullable<System.DateTime> datef, Nullable<System.DateTime> datet, Nullable<int> numOfMeals, ObjectParameter combinationID)
        {
            var datefParameter = datef.HasValue ?
                new ObjectParameter("datef", datef) :
                new ObjectParameter("datef", typeof(System.DateTime));
    
            var datetParameter = datet.HasValue ?
                new ObjectParameter("datet", datet) :
                new ObjectParameter("datet", typeof(System.DateTime));
    
            var numOfMealsParameter = numOfMeals.HasValue ?
                new ObjectParameter("numOfMeals", numOfMeals) :
                new ObjectParameter("numOfMeals", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewCombination2", datefParameter, datetParameter, numOfMealsParameter, combinationID);
        }
    
        public virtual ObjectResult<Nullable<decimal>> NewCombination3(Nullable<System.DateTime> datef, Nullable<System.DateTime> datet, Nullable<int> numOfMeals)
        {
            var datefParameter = datef.HasValue ?
                new ObjectParameter("datef", datef) :
                new ObjectParameter("datef", typeof(System.DateTime));
    
            var datetParameter = datet.HasValue ?
                new ObjectParameter("datet", datet) :
                new ObjectParameter("datet", typeof(System.DateTime));
    
            var numOfMealsParameter = numOfMeals.HasValue ?
                new ObjectParameter("numOfMeals", numOfMeals) :
                new ObjectParameter("numOfMeals", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("NewCombination3", datefParameter, datetParameter, numOfMealsParameter);
        }
    
        public virtual ObjectResult<GetGroceriesAndUnits_Result> GetGroceriesAndUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGroceriesAndUnits_Result>("GetGroceriesAndUnits");
        }
    
        public virtual int NewGrocerie2(string name, string groctype, string measuringUnit, Nullable<int> kcalperMeasuringUnit)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var groctypeParameter = groctype != null ?
                new ObjectParameter("groctype", groctype) :
                new ObjectParameter("groctype", typeof(string));
    
            var measuringUnitParameter = measuringUnit != null ?
                new ObjectParameter("measuringUnit", measuringUnit) :
                new ObjectParameter("measuringUnit", typeof(string));
    
            var kcalperMeasuringUnitParameter = kcalperMeasuringUnit.HasValue ?
                new ObjectParameter("kcalperMeasuringUnit", kcalperMeasuringUnit) :
                new ObjectParameter("kcalperMeasuringUnit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewGrocerie2", nameParameter, groctypeParameter, measuringUnitParameter, kcalperMeasuringUnitParameter);
        }
    
        public virtual ObjectResult<GetMealFromName_Result> GetMealFromName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMealFromName_Result>("GetMealFromName", nameParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay_Result> GetNutritionsForADay(Nullable<System.DateTime> dateWhen)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay_Result>("GetNutritionsForADay", dateWhenParameter);
        }
    
        public virtual ObjectResult<GetMealFromName2_Result> GetMealFromName2(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMealFromName2_Result>("GetMealFromName2", nameParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay2_Result> GetNutritionsForADay2(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay2_Result>("GetNutritionsForADay2", dateWhenParameter, mealsNumParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay3_Result> GetNutritionsForADay3(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay3_Result>("GetNutritionsForADay3", dateWhenParameter, mealsNumParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay4_Result> GetNutritionsForADay4(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay4_Result>("GetNutritionsForADay4", dateWhenParameter, mealsNumParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay5_Result> GetNutritionsForADay5(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay5_Result>("GetNutritionsForADay5", dateWhenParameter, mealsNumParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay6_Result> GetNutritionsForADay6(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay6_Result>("GetNutritionsForADay6", dateWhenParameter, mealsNumParameter);
        }
    
        public virtual ObjectResult<GetNutritionsForADay7_Result> GetNutritionsForADay7(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay7_Result>("GetNutritionsForADay7", dateWhenParameter, mealsNumParameter);
        }
    
        public virtual ObjectResult<GetUsers2_Result> GetUsers2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers2_Result>("GetUsers2");
        }
    
        public virtual ObjectResult<GetNutritionsForADay8_Result> GetNutritionsForADay8(Nullable<System.DateTime> dateWhen, Nullable<int> mealsNum)
        {
            var dateWhenParameter = dateWhen.HasValue ?
                new ObjectParameter("dateWhen", dateWhen) :
                new ObjectParameter("dateWhen", typeof(System.DateTime));
    
            var mealsNumParameter = mealsNum.HasValue ?
                new ObjectParameter("mealsNum", mealsNum) :
                new ObjectParameter("mealsNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNutritionsForADay8_Result>("GetNutritionsForADay8", dateWhenParameter, mealsNumParameter);
        }
    }
}
